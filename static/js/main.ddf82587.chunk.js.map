{"version":3,"sources":["Components/MovieCard/movieCard.module.css","Components/Header/NavBar.jsx","Components/MovieCard/Card.jsx","API/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","useStyles","makeStyles","theme","root","flexGrow","marginBottom","menuButton","marginRight","spacing","title","display","breakpoints","up","search","position","borderRadius","shape","backgroundColor","fade","palette","common","white","marginLeft","width","searchIcon","padding","height","pointerEvents","alignItems","justifyContent","inputRoot","color","inputInput","paddingLeft","transition","transitions","create","SearchAppBar","classes","className","AppBar","Toolbar","Typography","variant","noWrap","InputBase","placeholder","input","inputProps","flexWrap","margin","loading","SimplePaper","data","console","log","map","d","Paper","key","id","cx","styles","paperShadow","movieImg","src","poster_path","alt","titleAndYearContainer","vote_average","CircularProgress","size","fetchPopularMovies","a","axios","get","url","results","App","state","popularMovies","latestMovie","fetchedData","this","setState","populMovie","MovieCard","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.ddf82587.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"movieImg\":\"movieCard_movieImg__3Nfd1\",\"titleAndYearContainer\":\"movieCard_titleAndYearContainer__391lJ\",\"loading\":\"movieCard_loading__2XXUO\",\"paperShadow\":\"movieCard_paperShadow__38MEZ\",\"moreInfo\":\"movieCard_moreInfo__2z6ZV\",\"tooltiptext\":\"movieCard_tooltiptext__2TtZw\"};","import React from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport { fade, makeStyles } from '@material-ui/core/styles';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    marginBottom:80\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n    display: 'none',\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'block',\r\n    },\r\n  },\r\n  search: {\r\n    position: 'relative',\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    '&:hover': {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25),\r\n    },\r\n    marginLeft: 0,\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      marginLeft: theme.spacing(1),\r\n      width: 'auto',\r\n    },\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: '100%',\r\n    position: 'absolute',\r\n    pointerEvents: 'none',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  inputRoot: {\r\n    color: 'inherit',\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create('width'),\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: '12ch',\r\n      '&:focus': {\r\n        width: '20ch',\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function SearchAppBar() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"fixed\" >\r\n        <Toolbar>\r\n          <Typography className={classes.title} variant=\"h6\" noWrap>\r\n            Movie Search\r\n          </Typography> \r\n          <div className={classes.search}>\r\n            <div className={classes.searchIcon}>\r\n              <SearchIcon />\r\n            </div>\r\n            <InputBase\r\n              placeholder=\"Searchâ€¦\"\r\n              classes={{\r\n                root: classes.inputRoot,\r\n                input: classes.inputInput,\r\n              }}\r\n              inputProps={{ 'aria-label': 'search' }}\r\n            />\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport styles from './movieCard.module.css'\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport cx from 'classnames'\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    justifyContent:'center',\r\n    '& > *': {\r\n      margin: theme.spacing(3),\r\n      width: theme.spacing(40),\r\n      height: theme.spacing(50),\r\n    },\r\n  },\r\n  loading: {\r\n    display: 'flex',\r\n    '& > * + *': {\r\n      marginLeft: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n\r\n\r\n\r\nexport default function SimplePaper({data}) {\r\n  const classes = useStyles();\r\n  const imgUrl = \"https://image.tmdb.org/t/p/original\"\r\n  console.log(data)\r\n  if(data[0]){\r\n    return (\r\n      \r\n      <div className={classes.root} >\r\n        {data.map(d =>{\r\n          return(\r\n            <Paper key = {d.id} className={cx(styles.paperShadow)}>\r\n                <img className = {styles.movieImg}src={imgUrl+ `${d.poster_path}`} alt=\"\"></img>\r\n                <div className={styles.titleAndYearContainer}>\r\n                  <h3>{d.title}</h3>\r\n                  <h5>{d.vote_average}</h5>\r\n                  \r\n                </div>\r\n              \r\n          </Paper>\r\n          \r\n          )\r\n        })}\r\n      </div>\r\n    );\r\n  }else{\r\n    return (\r\n      <div className={styles.loading} >\r\n        <CircularProgress size = {280} color=\"secondary\" />\r\n        <h1>Loading...</h1>\r\n      </div>\r\n    )\r\n  }\r\n  \r\n}","import axios from 'axios'\r\nconst apiKey = 'api_key=dc431dc887ae9c4133d35d16320bced8'\r\nconst url = 'https://api.themoviedb.org/3/movie'\r\nconst searchParm = '/popular?'\r\n\r\nexport const fetchPopularMovies = async () =>{\r\n    try {\r\n        const {data} = await axios.get(`${url + searchParm+apiKey}`)\r\n        //console.log(data.results)\r\n        return data.results\r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n}","import React from 'react';\nimport NavBar from './Components/Header/NavBar'\nimport MovieCard from \"./Components/MovieCard/Card\"\nimport {fetchPopularMovies} from './API'\nimport './App.css';\nimport styles from './elementAppStyle.modules.css'\n\nclass App extends React.Component{\n\n  state = {\n    popularMovies:{},\n    latestMovie:{}\n}\n\nasync componentDidMount(){\n    const fetchedData =  await fetchPopularMovies()\n    this.setState({popularMovies: fetchedData})\n}\n  \n  \n\n  render(){\n    let populMovie = this.state.popularMovies;\n    return (\n      <div className=\"App\">\n        <NavBar/>\n        <div>\n          <h1>Popular Movies</h1>\n          <MovieCard className={styles.MovieCard} data={populMovie}/>\n        </div>\n\n      </div>\n    )\n  }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}